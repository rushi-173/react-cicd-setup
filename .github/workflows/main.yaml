name: CI/CD

on:
  push:
    branches:
      - deployment
    paths:
      - 'server/**'
      - 'client/**'

jobs:
  build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_URL }}
          ECR_REPOSITORY: nodejs-app
        run: |
          docker build -t ${{ secrets.ECR_URL }}/nodejs-app ./server
          docker push ${{ secrets.ECR_URL }}/nodejs-app
 
  deploy_bakend:
    needs: build_backend
    runs-on: self-hosted
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_URL }}
          ECR_REPOSITORY: nodejs-app
        run: |
          docker pull ${{ secrets.ECR_URL }}/nodejs-app:latest
          docker rm -f nodejs-app-container
      - name: Delete old container
        run: docker rm -f nodejs-app-container  
      - name: Run Docker Container
        run: docker run -d -p 4000:4000 --name nodejs-app-container -e MONGODB_URI='${{ secrets.MONGODB_URI }}' ${{ secrets.ECR_URL }}/nodejs-app

  # build_frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Source
  #       uses: actions/checkout@v4
  #     - name: Login to docker hub
  #       run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}     
  #     - name: Build Docker Image
  #       run: docker build -t rushi173/reactjs-app --build-arg REACT_APP_NODE_ENV='production' --build-arg REACT_APP_SERVER_BASE_URL='${{ secrets.REACT_APP_SERVER_BASE_URL }}'  ./client
  #     - name: Publish Image to docker hub
  #       run: docker push rushi173/reactjs-app:latest 
 
  # deploy_frontend:
  #   needs: build_frontend
  #   runs-on: self-hosted 
  #   steps:
  #     - name: Pull image from docker hub
  #       run: docker pull rushi173/reactjs-app:latest 
  #     - name: Delete old container
  #       run: docker rm -f reactjs-app-container
  #     - name: Run Docker Container
  #       run: docker run -d -p 80:80 --name reactjs-app-container rushi173/reactjs-app
