name: CI/CD

on:
  push:
    branches:
      - deployment
    paths:
      - 'server/**'
      - 'client/**'

jobs:
  build_backend:
    if: ${{ github.event_name == 'push' && contains(github.event.head_commit.modified, 'server/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}     
      - name: Build Docker Image
        run: docker build -t rushi173/nodejs-app  ./server
      - name: Publish Image to docker hub
        run: docker push rushi173/nodejs-app:latest 
 
  deploy_bakend:
    if: ${{ github.event_name == 'push' && contains(github.event.head_commit.modified, 'server/') }}
    needs: build_backend
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull rushi173/nodejs-app:latest 
      - name: Delete old container
        run: docker rm -f nodejs-app-container  
      - name: Run Docker Container
        run: docker run -d -p 4000:4000 --name nodejs-app-container -e MONGODB_URI='${{ secrets.MONGODB_URI }}' rushi173/nodejs-app

  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}     
      - name: Build Docker Image
        run: docker build -t rushi173/reactjs-app --build-arg REACT_APP_NODE_ENV='production' --build-arg REACT_APP_SERVER_BASE_URL='${{ secrets.REACT_APP_SERVER_BASE_URL }}'  ./client
      - name: Publish Image to docker hub
        run: docker push rushi173/reactjs-app:latest 
 
  deploy_frontend:
    needs: build_frontend
    runs-on: self-hosted 
    steps:
      - name: Pull image from docker hub
        run: docker pull rushi173/reactjs-app:latest 
      - name: Delete old container
        run: docker rm -f reactjs-app-container
      - name: Run Docker Container
        run: docker run -d -p 80:80 --name reactjs-app-container rushi173/reactjs-app
