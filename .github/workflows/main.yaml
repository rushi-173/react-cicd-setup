name: CI/CD

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -e {0}

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Authenticate Docker with Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build and push Docker images
      run: |
        docker build -t frontend ./client
        docker tag frontend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend:latest
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend:latest

        docker build -t backend ./server
        docker tag backend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend:latest
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/backend:latest

    - name: Deploy to EC2
      run: ssh -o StrictHostKeyChecking=no ec2-user@$AWS_EC2_IP 'bash -s' < deploy.sh
      env:
        AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
